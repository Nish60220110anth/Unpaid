// Income  Statement router

// Applications :
// (i) to create income statement pdf --- TOCHANGE

// Requirements
const express = require("express");
const cors = require("cors");
const bodyparser = require("body-parser");
const htmlpdf = require("html-pdf");

// IncomeStatementRouter           ---- TOCHANGE
const emdRouter = express.Router();

// Templates
const pdfTemplate = require("../views/template/emdStorage");

// Per file Variables
var file_count = 1;
const gen_file_name = "EMD";

// Middleware
emdRouter.use(cors());
emdRouter.use(bodyparser.urlencoded({ extended: true }));
emdRouter.use(bodyparser.json());

// POST - to make server to genarate pdf
// GET - after making post request - again we need to ask the server to give the pdf generated by it

// Creates pdf
// notifies frontend that it created the pdf
emdRouter.post("/create", (req, res) => {
	//console.log(`${req.body.name}`);
	console.log("Employee Storage Post Request");
	htmlpdf
		.create(pdfTemplate(req.body), {})
		.toFile(`${gen_file_name}_${file_count}.pdf`, (err) => {
			if (err) {
				Promise.reject();
			}
			res.send(Promise.resolve());
		});
});

//returns the pdf generated
emdRouter.get("/", (req, res) => {
	const dirpath = __dirname;
	var path = "",
		lastIndex = 0;
	for (var i = 0; i < dirpath.length; i++) {
		if (dirpath[i] == "\\") {
			lastIndex = i;
		}
	}
	path = dirpath.substring(0, lastIndex);
	res.sendFile(`${path}/${gen_file_name}_${file_count}.pdf`);
	file_count++;
});

module.exports = emdRouter;
